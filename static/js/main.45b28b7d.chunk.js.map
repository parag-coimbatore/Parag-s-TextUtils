{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","color","mode","src","class","alt","Navbar","to","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setalert","message","setTimeout","stotra1","contact","about","body","setInterval","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45b28b7d.chunk.js","sourcesContent":["import React , {useState} from 'react'\r\n\r\n\r\nexport default function About(props) {\r\n    return (       \r\n            <div className = \"container my-5\"  > \r\n             \r\n            <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}> \r\n                <h1>About Us </h1>    \r\n                <img src=\"/images/my pic.jpg\" class=\"rounded mx-auto d-block\" alt=\"...\"/> \r\n                <span class=\"border border-warning\"></span>\r\n                <p class=\"font-italic\">This website allows you to modify your text as per your requirement.\r\n                        It is designed by Parag Coimbatore. </p>\r\n                        <p>You can do the following:-</p>\r\n                        <p>1. Convert to Uppercase </p>\r\n                        <p>2. Convert to LowerCase </p>\r\n                        <p>3. Clear the text </p>\r\n                        <p>4. Copy it to clipboard </p>\r\n\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>  \r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.contact}</a>\r\n              </li> */}\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n              </li> */}\r\n              {/* <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  Courses\r\n                </a>\r\n                 <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li><a className=\"dropdown-item\" href=\"/\">{props.stotra1}</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">vishnu Sashtrnama</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Nakha stuti</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Venkatesh Stotra</a></li>\r\n                  <li><hr className=\"dropdown-divider\"/></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Logout</a></li>\r\n\r\n                </ul>\r\n              </li> */}\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\">Disabled</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button type=\"button\" className=\"btn btn-primary\">Search</button>\r\n            </form> */}\r\n\r\n              <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}> \r\n                <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n              </div>\r\n              \r\n              \r\n            \r\n          </div>\r\n        </div>\r\n      </nav> \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired, \r\n                    contact: PropTypes.string,\r\n                  }\r\n                  Navbar.defaultProps = {\r\n      title: 'Set title here',\r\n      aboutText: 'About text here'\r\n      };","import React ,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) { //Here we will create functions that takes action on clicking of buttons\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperrCase\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        console.log(\"Copy the text\");\r\n        var text = document.getElementById(\"MyBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n\r\n    const handleclrClick = () => {\r\n        console.log(\"Clear was clicked\");\r\n        let newText = (\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Cleared the text\",\"success\");\r\n    }\r\n    const removeEs = () => {\r\n        console.log(\"Removed extra spaces\");\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"On Changed\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n\r\n            \r\n            <div className =\"Container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n                <h1 >  {props.heading}  </h1>\r\n                <div className=\"mb-13\">\r\n                \r\n                <textarea  className=\"form-control my-3\" value = {text} id=\"MyBox\" onChange = {handleOnChange} style={{backgroundColor: props.mode === 'dark'?'#e9ecef':'white'}} rows=\"5\"></textarea>\r\n                <button disabled = {text.length=== 0} className=\"btn btn-primary mx-2 my-2\" onClick= {handleUpClick} > Convert to UPPERCASE</button>  \r\n                <button disabled = {text.length=== 0} className=\"btn btn-primary mx-2 my-2\" onClick= {handleLoClick} > Convert to lowercase</button> \r\n                <button disabled = {text.length=== 0} className=\"btn btn-primary mx-2 my-2\" onClick= {handleclrClick} > Clear the text</button>  \r\n                <button disabled = {text.length=== 0} className=\"btn btn-primary mx-2 my-2\" onClick= {handleCopy} > Copy the text</button> \r\n                <button disabled = {text.length=== 0} className=\"btn btn-primary mx-2 my-2\" onClick= {removeEs} > Remove extra spaces</button> \r\n                \r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>  \r\n                <h2 style = {{color: props.mode==='light'?'black':'white'}}> Your text summary</h2>\r\n                <p> {text.split (\" \").filter((element)=> {return element.length!==0}).length} words and {text.length} characters </p>\r\n                <p> {0.008 * text.split (\" \").filter((element)=> {return element.length!==0}).length} minutes to read this </p>\r\n                <h2> Preview </h2>\r\n                <p> {text.length>0?text:\"Nothing to preview\"}</p>\r\n            </div>\r\n\r\n            <div className = \"container my-5\"  >  \r\n            <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}> \r\n                <h1>About Us </h1>    \r\n                <img src=\"/images/my pic.jpg\" class=\"rounded mx-auto d-block\" alt=\"...\"/> \r\n                <span class=\"border border-warning\"></span>\r\n                <p class=\"font-italic\">This website allows you to modify your text as per your requirement.\r\n                        It is designed by Parag Coimbatore. </p>\r\n                        <p>You can do the following:-</p>\r\n                        <p>1. Convert to Uppercase </p>\r\n                        <p>2. Convert to LowerCase </p>\r\n                        <p>3. Clear the text </p>\r\n                        <p>4. Copy it to clipboard </p>\r\n\r\n            </div>    \r\n        </div>\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize= (word)=> {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        \r\n        <div style = {{height:'30px'}}> \r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}  </strong>:{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setalert] = useState(null);  //to show alert message\n\n  const showAlert = (message, type)=>{  //This function take message and type and will be called\n    setalert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {   //This determines the time for which alert will occur\n      setalert(null);\n    },3000);\n  }\n\n  const toggleMode = ()=>{  //This function determines what action should be taken when switch in navbar is clicked\n    if (mode === 'light'){\n      setMode ('dark');  //if mode is light set it to dark\n      document.body.style.backgroundColor = '#042743';  \n      showAlert(\"Dark mode is enabled\", \"success\"); //ShowAlert will show this message and success as Tyoe\n      document.title =  'Dark Mode Enabled';\n\n      setInterval(() => {  //this helps to change the title of the topic\n        document.title = 'Its Amazing';  //to enhance the title\n      }, 3500); //in 2000 ms\n      setInterval(() => {\n        document.title = 'Download TexUtils Now'; //to enhance the title\n      }, 2500);\n    }\n    else{\n      setMode ('light');    //else set it to light\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title =  'Light Mode Enabled';\n      \n    }\n  }\n  return (\n    <>\n      <Router>\n      <Navbar title=\"TextUtils\" stotra1=\"Ramraksha stotra\" contact=\"Contact Us\" about=\"About\"  mode={mode}\n        toggleMode={toggleMode}/>   \n      <Alert alert={alert}/>\n      <div className=\"container my-4\">\n  \n        \n      <Switch>\n            <Route exact path=\"/about\"> \n              <About heading = \"About Us\" mode={mode}/>  \n            </Route>\n            \n            <Route exact path=\"/\">\n            <TextForm showAlert = {showAlert} heading = \"Enter your text to analyze\"  mode={mode}/>\n            </Route>\n      </Switch>\n        {/* <About/> */}\n      </div>   \n    </Router>\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}